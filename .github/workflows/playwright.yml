name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
        # run tests in 4 shards
        # shardIndex: [1, 2, 3, 4, 5, 6, 7, 8]
        # shardTotal: [8]
        # run tests in 8 shards

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      env:
        CI: true
        BASE_URL: ${{ secrets.BASE_URL }}
        API_BASE_URL: ${{ secrets.API_BASE_URL }}
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.shardIndex }}
        path: |
          playwright-report/
          test-results/
          screenshots/
          videos/
        retention-days: 30

  test-on-staging:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run smoke tests on staging
      run: npx playwright test --grep @smoke
      env:
        CI: true
        BASE_URL: ${{ secrets.STAGING_BASE_URL }}
        API_BASE_URL: ${{ secrets.STAGING_API_BASE_URL }}
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: staging-test-results
        path: |
          playwright-report/
          test-results/
          screenshots/
          videos/
        retention-days: 30

  test-mobile:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run mobile tests
      run: |
        npx playwright test --project="Mobile Chrome"
        npx playwright test --project="Mobile Safari"
      env:
        CI: true
        BASE_URL: ${{ secrets.BASE_URL }}
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-test-results
        path: |
          playwright-report/
          test-results/
          screenshots/
          videos/
        retention-days: 30

  test-api:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run API tests
      run: npx playwright test tests/api/
      env:
        CI: true
        API_BASE_URL: ${{ secrets.API_BASE_URL }}
        API_KEY: ${{ secrets.API_KEY }}
        API_SECRET: ${{ secrets.API_SECRET }}
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-test-results
        path: |
          playwright-report/
          test-results/
        retention-days: 30 